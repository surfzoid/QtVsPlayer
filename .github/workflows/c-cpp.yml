on:
    push:
      # Sequence of patterns matched against refs/tags
      tags:
        - 'v1.0.*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
name: Create RPM Release

jobs:
    build:
        name: Create RPM Release
        runs-on: ubuntu-latest

        steps:
        - name: Setup C++ environment
          uses: kurocha/setup-cpp@v1
        - name: Install Qt
          uses: jurplel/install-qt-action@v2.14.0
        - name: Checkout code
          uses: actions/checkout@master
        - name: Install Qt5Gui
          run: sudo apt install ffmpeg sox mplayer libnotify-dev qt5-default qt5-qmake g++ make libqt5multimediawidgets5 qtmultimedia5-dev libqt5widgets5
        - name: Qt5 Version info
          run: dpkg -l | grep qt5-default

        - name: Create Release
          id: create_release
          uses: actions/create-release@latest
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
              tag_name: ${{ github.ref }}
              release_name: Release ${{ github.ref }}
              body: |
                Changes in this Release
                - Create RPM
                - Upload Source RPM
              draft: false
              prerelease: false
            
        - name: build RPM package
          id: rpm_build
          uses: naveenrajm7/rpmbuild@master
          with:
              spec_file: "QtVsPlayer.spec"
            
        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ${{ steps.rpm_build.outputs.source_rpm_path }}
              asset_name: ${{ steps.rpm_build.outputs.source_rpm_name }}
              asset_content_type: ${{ steps.rpm_build.outputs.rpm_content_type }}
